{"version":3,"sources":["utils/orderby.ts"],"names":[],"mappings":"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","file":"utils/orderby.js","sourcesContent":["/*\n * Example use\n *      Basic Array of single type: *ngFor=\"#todo of todoService.todos | orderBy : '-'\"\n *      Multidimensional Array Sort on single column: *ngFor=\"#todo of todoService.todos | orderBy : ['-status']\"\n *      Multidimensional Array Sort on multiple columns: *ngFor=\"#todo of todoService.todos | orderBy : ['status', '-title']\"\n */\n\nimport {Pipe, PipeTransform} from 'angular2/core';\n\n@Pipe({name: 'orderBy', pure: false})\nexport class OrderBy implements PipeTransform {\n\n    static _orderByComparator(a:any, b:any):number{\n    \n      if((isNaN(parseFloat(a)) || !isFinite(a)) || (isNaN(parseFloat(b)) || !isFinite(b))){\n        //Isn't a number so lowercase the string to properly compare\n        if(a.toLowerCase() < b.toLowerCase()) return -1;\n        if(a.toLowerCase() > b.toLowerCase()) return 1;\n      }\n      else{\n        //Parse strings as numbers to compare properly\n        if(parseFloat(a) < parseFloat(b)) return -1;\n        if(parseFloat(a) > parseFloat(b)) return 1;\n      }\n    \n      return 0; //equal each other\n    }\n\n    transform(input:any, [config = '+']): any{\n        \n        if(!Array.isArray(input)) return input;\n\n        if(!Array.isArray(config) || (Array.isArray(config) && config.length == 1)){\n            var propertyToCheck:string = !Array.isArray(config) ? config : config[0];\n            var desc = propertyToCheck.substr(0, 1) == '-';\n            \n            //Basic array\n            if(!propertyToCheck || propertyToCheck == '-' || propertyToCheck == '+'){\n                return !desc ? input.sort() : input.sort().reverse();\n            }\n            else {\n                var property:string = propertyToCheck.substr(0, 1) == '+' || propertyToCheck.substr(0, 1) == '-'\n                    ? propertyToCheck.substr(1)\n                    : propertyToCheck;\n\n                return input.sort(function(a:any,b:any){\n                    return !desc \n                        ? OrderBy._orderByComparator(a[property], b[property]) \n                        : -OrderBy._orderByComparator(a[property], b[property]);\n                });\n            }\n        }\n        else {\n            //Loop over property of the array in order and sort\n            return input.sort(function(a:any,b:any){\n                for(var i:number = 0; i < config.length; i++){\n                    var desc = config[i].substr(0, 1) == '-';\n                    var property = config[i].substr(0, 1) == '+' || config[i].substr(0, 1) == '-'\n                        ? config[i].substr(1)\n                        : config[i];\n\n                    var comparison = !desc \n                        ? OrderBy._orderByComparator(a[property], b[property]) \n                        : -OrderBy._orderByComparator(a[property], b[property]);\n                    \n                    //Don't return 0 yet in case of needing to sort by next property\n                    if(comparison != 0) return comparison;\n                }\n\n                return 0; //equal each other\n            });\n        }\n    }\n}"],"sourceRoot":"/source/"}