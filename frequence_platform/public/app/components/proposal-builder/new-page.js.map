{"version":3,"sources":["components/proposal-builder/new-page.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;YAcA;gBAQC,qBAAoB,EAAc,EAAU,YAAyB,EAAiC,MAAM;oBAAxF,OAAE,GAAF,EAAE,CAAY;oBAAU,iBAAY,GAAZ,YAAY,CAAa;oBAAiC,WAAM,GAAN,MAAM,CAAA;oBAHlG,cAAS,GAA4B,IAAI,mBAAY,EAAE,CAAC;gBAG8C,CAAC;gBAEjH,qCAAe,GAAf;oBACC,IAAI,CAAC,QAAQ,EAAE,CAAC;gBACjB,CAAC;gBAED,8BAAQ,GAAR;oBAAA,iBAKI;oBAJH,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE;yBAClC,SAAS,CAAC,UAAA,SAAS;wBACnB,KAAI,CAAC,SAAS,GAAG,SAAS,CAAC;oBAC5B,CAAC,CAAC,CAAC;gBACF,CAAC;gBAED,8BAAQ,GAAR,UAAS,QAAmB;oBAC9B,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;gBAC/B,CAAC;gBAED,6BAAO,GAAP;oBACF,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;oBAC3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;gBAC3B,CAAC;gBAvBJ;oBAAC,aAAM,EAAE;;8DAAA;gBACT;oBAAC,YAAK,EAAE;;6DAAA;gBAXT;oBAAC,gBAAS,CAAC;wBACV,QAAQ,EAAE,eAAe;wBACzB,WAAW,EAAE,wEAAwE;wBACrF,UAAU,EAAE,CAAC,eAAQ,EAAE,2CAAoB,EAAE,sBAAS,CAAC;qBACvD,CAAC;+BASuE,aAAM,CAAC,sBAAa,CAAC;;+BAT5F;gBA8BF,kBAAC;YAAD,CA7BA,AA6BC,IAAA;YA7BD,qCA6BC,CAAA","file":"components/proposal-builder/new-page.js","sourcesContent":["import {Component, Input, Output, Inject, ElementRef, EventEmitter} from 'angular2/core';\n\nimport {MaterializeDirective} from 'angular2-materialize';\n\nimport {PageView} from './page';\nimport {PageModel, PageService} from '../../services/page';\nimport {ConfigService} from '../../services/config';\nimport {PageFrame} from '../../directives/page-frame';\n\n@Component({\n\tselector: 'new-page-form',\n\ttemplateUrl: '/public/app/components/proposal-builder/new-page.html?v=<%= VERSION %>',\n\tdirectives: [PageView, MaterializeDirective, PageFrame]\n})\nexport class NewPageView {\n\ttemplates: PageModel[];\n\tprivate _el: HTMLElement;\n\tprivate selectedTemplate: PageModel;\n\n\t@Output() onAddPage: EventEmitter<PageModel> = new EventEmitter();\n\t@Input() proposal: Object;\n\n\tconstructor(private el: ElementRef, private _pageService: PageService, @Inject(ConfigService) private config) { }\n\n\tngAfterViewInit() {\n\t\tthis.getPages();\n\t}\n\n\tgetPages() {\n\t\tthis._pageService.getPageTemplates()\n\t\t\t.subscribe(templates => {\n\t\t\t\tthis.templates = templates;\n\t\t\t});\n    }\n\n    onSelect(template: PageModel) {\n\t\tthis.selectedTemplate = template;\n    }\n\n    addPage() {\n\t\tthis.onAddPage.emit(this.selectedTemplate);\n\t\tthis.selectedTemplate = null;\n    }\n}"],"sourceRoot":"/source/"}